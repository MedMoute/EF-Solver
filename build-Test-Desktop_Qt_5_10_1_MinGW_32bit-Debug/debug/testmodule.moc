/****************************************************************************
** Meta object code from reading C++ file 'testmodule.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.10.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'testmodule.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.10.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_Tests_t {
    QByteArrayData data[20];
    char stringdata0[193];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Tests_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Tests_t qt_meta_stringdata_Tests = {
    {
QT_MOC_LITERAL(0, 0, 5), // "Tests"
QT_MOC_LITERAL(1, 6, 8), // "C3_Add_1"
QT_MOC_LITERAL(2, 15, 0), // ""
QT_MOC_LITERAL(3, 16, 8), // "C3_Add_2"
QT_MOC_LITERAL(4, 25, 8), // "C3_Sub_1"
QT_MOC_LITERAL(5, 34, 8), // "C3_Sub_2"
QT_MOC_LITERAL(6, 43, 13), // "C3_Scal_Mul_1"
QT_MOC_LITERAL(7, 57, 13), // "C3_Scal_Mul_2"
QT_MOC_LITERAL(8, 71, 8), // "C3_Mul_1"
QT_MOC_LITERAL(9, 80, 13), // "C3_Scal_Div_1"
QT_MOC_LITERAL(10, 94, 13), // "C3_Scal_Div_2"
QT_MOC_LITERAL(11, 108, 8), // "C3_Div_1"
QT_MOC_LITERAL(12, 117, 7), // "C3_PS_1"
QT_MOC_LITERAL(13, 125, 7), // "C3_PS_2"
QT_MOC_LITERAL(14, 133, 7), // "C3_PS_3"
QT_MOC_LITERAL(15, 141, 7), // "C3_PS_4"
QT_MOC_LITERAL(16, 149, 9), // "C3_Norm_1"
QT_MOC_LITERAL(17, 159, 9), // "C3_Norm_2"
QT_MOC_LITERAL(18, 169, 11), // "C3_V_Norm_1"
QT_MOC_LITERAL(19, 181, 11) // "C3_V_Norm_2"

    },
    "Tests\0C3_Add_1\0\0C3_Add_2\0C3_Sub_1\0"
    "C3_Sub_2\0C3_Scal_Mul_1\0C3_Scal_Mul_2\0"
    "C3_Mul_1\0C3_Scal_Div_1\0C3_Scal_Div_2\0"
    "C3_Div_1\0C3_PS_1\0C3_PS_2\0C3_PS_3\0"
    "C3_PS_4\0C3_Norm_1\0C3_Norm_2\0C3_V_Norm_1\0"
    "C3_V_Norm_2"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Tests[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      18,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  104,    2, 0x08 /* Private */,
       3,    0,  105,    2, 0x08 /* Private */,
       4,    0,  106,    2, 0x08 /* Private */,
       5,    0,  107,    2, 0x08 /* Private */,
       6,    0,  108,    2, 0x08 /* Private */,
       7,    0,  109,    2, 0x08 /* Private */,
       8,    0,  110,    2, 0x08 /* Private */,
       9,    0,  111,    2, 0x08 /* Private */,
      10,    0,  112,    2, 0x08 /* Private */,
      11,    0,  113,    2, 0x08 /* Private */,
      12,    0,  114,    2, 0x08 /* Private */,
      13,    0,  115,    2, 0x08 /* Private */,
      14,    0,  116,    2, 0x08 /* Private */,
      15,    0,  117,    2, 0x08 /* Private */,
      16,    0,  118,    2, 0x08 /* Private */,
      17,    0,  119,    2, 0x08 /* Private */,
      18,    0,  120,    2, 0x08 /* Private */,
      19,    0,  121,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void Tests::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Tests *_t = static_cast<Tests *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->C3_Add_1(); break;
        case 1: _t->C3_Add_2(); break;
        case 2: _t->C3_Sub_1(); break;
        case 3: _t->C3_Sub_2(); break;
        case 4: _t->C3_Scal_Mul_1(); break;
        case 5: _t->C3_Scal_Mul_2(); break;
        case 6: _t->C3_Mul_1(); break;
        case 7: _t->C3_Scal_Div_1(); break;
        case 8: _t->C3_Scal_Div_2(); break;
        case 9: _t->C3_Div_1(); break;
        case 10: _t->C3_PS_1(); break;
        case 11: _t->C3_PS_2(); break;
        case 12: _t->C3_PS_3(); break;
        case 13: _t->C3_PS_4(); break;
        case 14: _t->C3_Norm_1(); break;
        case 15: _t->C3_Norm_2(); break;
        case 16: _t->C3_V_Norm_1(); break;
        case 17: _t->C3_V_Norm_2(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

QT_INIT_METAOBJECT const QMetaObject Tests::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Tests.data,
      qt_meta_data_Tests,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *Tests::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Tests::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_Tests.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int Tests::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 18)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 18;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 18)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 18;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
